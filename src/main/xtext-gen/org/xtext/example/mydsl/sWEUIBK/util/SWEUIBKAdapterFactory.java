/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.sWEUIBK.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.xtext.example.mydsl.sWEUIBK.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.sWEUIBK.SWEUIBKPackage
 * @generated
 */
public class SWEUIBKAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static SWEUIBKPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SWEUIBKAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = SWEUIBKPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SWEUIBKSwitch<Adapter> modelSwitch =
    new SWEUIBKSwitch<Adapter>()
    {
      @Override
      public Adapter caseDomainmodel(Domainmodel object)
      {
        return createDomainmodelAdapter();
      }
      @Override
      public Adapter caseObjectDeclaration(ObjectDeclaration object)
      {
        return createObjectDeclarationAdapter();
      }
      @Override
      public Adapter caseModelDeclaration(ModelDeclaration object)
      {
        return createModelDeclarationAdapter();
      }
      @Override
      public Adapter caseMonitorDeclaration(MonitorDeclaration object)
      {
        return createMonitorDeclarationAdapter();
      }
      @Override
      public Adapter caseMonitorInitialization(MonitorInitialization object)
      {
        return createMonitorInitializationAdapter();
      }
      @Override
      public Adapter caseAnalyzerDeclaration(AnalyzerDeclaration object)
      {
        return createAnalyzerDeclarationAdapter();
      }
      @Override
      public Adapter caseAnalyzer(Analyzer object)
      {
        return createAnalyzerAdapter();
      }
      @Override
      public Adapter casePageDeclaration(PageDeclaration object)
      {
        return createPageDeclarationAdapter();
      }
      @Override
      public Adapter caseObjectAction(ObjectAction object)
      {
        return createObjectActionAdapter();
      }
      @Override
      public Adapter caseModelAction(ModelAction object)
      {
        return createModelActionAdapter();
      }
      @Override
      public Adapter caseModelStructure(ModelStructure object)
      {
        return createModelStructureAdapter();
      }
      @Override
      public Adapter caseMonitorObjectAction(MonitorObjectAction object)
      {
        return createMonitorObjectActionAdapter();
      }
      @Override
      public Adapter caseAnalyzerObjectAction(AnalyzerObjectAction object)
      {
        return createAnalyzerObjectActionAdapter();
      }
      @Override
      public Adapter casePageObjectAction(PageObjectAction object)
      {
        return createPageObjectActionAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.Domainmodel <em>Domainmodel</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.Domainmodel
   * @generated
   */
  public Adapter createDomainmodelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.ObjectDeclaration <em>Object Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.ObjectDeclaration
   * @generated
   */
  public Adapter createObjectDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.ModelDeclaration <em>Model Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.ModelDeclaration
   * @generated
   */
  public Adapter createModelDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.MonitorDeclaration <em>Monitor Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.MonitorDeclaration
   * @generated
   */
  public Adapter createMonitorDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.MonitorInitialization <em>Monitor Initialization</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.MonitorInitialization
   * @generated
   */
  public Adapter createMonitorInitializationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.AnalyzerDeclaration <em>Analyzer Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.AnalyzerDeclaration
   * @generated
   */
  public Adapter createAnalyzerDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.Analyzer <em>Analyzer</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.Analyzer
   * @generated
   */
  public Adapter createAnalyzerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.PageDeclaration <em>Page Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.PageDeclaration
   * @generated
   */
  public Adapter createPageDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.ObjectAction <em>Object Action</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.ObjectAction
   * @generated
   */
  public Adapter createObjectActionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.ModelAction <em>Model Action</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.ModelAction
   * @generated
   */
  public Adapter createModelActionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.ModelStructure <em>Model Structure</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.ModelStructure
   * @generated
   */
  public Adapter createModelStructureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.MonitorObjectAction <em>Monitor Object Action</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.MonitorObjectAction
   * @generated
   */
  public Adapter createMonitorObjectActionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.AnalyzerObjectAction <em>Analyzer Object Action</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.AnalyzerObjectAction
   * @generated
   */
  public Adapter createAnalyzerObjectActionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.example.mydsl.sWEUIBK.PageObjectAction <em>Page Object Action</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.example.mydsl.sWEUIBK.PageObjectAction
   * @generated
   */
  public Adapter createPageObjectActionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //SWEUIBKAdapterFactory
