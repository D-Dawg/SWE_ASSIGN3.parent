/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.sWEUIBK.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.example.mydsl.sWEUIBK.Analyzer;
import org.xtext.example.mydsl.sWEUIBK.AnalyzerDeclaration;
import org.xtext.example.mydsl.sWEUIBK.AnalyzerObjectAction;
import org.xtext.example.mydsl.sWEUIBK.AnalyzerOperations;
import org.xtext.example.mydsl.sWEUIBK.ConnectionType;
import org.xtext.example.mydsl.sWEUIBK.Domainmodel;
import org.xtext.example.mydsl.sWEUIBK.ModelAction;
import org.xtext.example.mydsl.sWEUIBK.ModelDeclaration;
import org.xtext.example.mydsl.sWEUIBK.MonitorDeclaration;
import org.xtext.example.mydsl.sWEUIBK.MonitorObjectAction;
import org.xtext.example.mydsl.sWEUIBK.MonitorOperations;
import org.xtext.example.mydsl.sWEUIBK.ObjectAction;
import org.xtext.example.mydsl.sWEUIBK.ObjectDeclaration;
import org.xtext.example.mydsl.sWEUIBK.PageDeclaration;
import org.xtext.example.mydsl.sWEUIBK.PageObjectAction;
import org.xtext.example.mydsl.sWEUIBK.PageOperations;
import org.xtext.example.mydsl.sWEUIBK.SWEUIBKFactory;
import org.xtext.example.mydsl.sWEUIBK.SWEUIBKPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SWEUIBKPackageImpl extends EPackageImpl implements SWEUIBKPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass domainmodelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass monitorDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass analyzerDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass analyzerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pageDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass monitorObjectActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass analyzerObjectActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pageObjectActionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum monitorOperationsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum analyzerOperationsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum pageOperationsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum connectionTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.example.mydsl.sWEUIBK.SWEUIBKPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private SWEUIBKPackageImpl()
  {
    super(eNS_URI, SWEUIBKFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link SWEUIBKPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static SWEUIBKPackage init()
  {
    if (isInited) return (SWEUIBKPackage)EPackage.Registry.INSTANCE.getEPackage(SWEUIBKPackage.eNS_URI);

    // Obtain or create and register package
    SWEUIBKPackageImpl theSWEUIBKPackage = (SWEUIBKPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof SWEUIBKPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new SWEUIBKPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theSWEUIBKPackage.createPackageContents();

    // Initialize created meta-data
    theSWEUIBKPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theSWEUIBKPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(SWEUIBKPackage.eNS_URI, theSWEUIBKPackage);
    return theSWEUIBKPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDomainmodel()
  {
    return domainmodelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDomainmodel_Elements()
  {
    return (EReference)domainmodelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDomainmodel_Actions()
  {
    return (EReference)domainmodelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getObjectDeclaration()
  {
    return objectDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModelDeclaration()
  {
    return modelDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModelDeclaration_Name()
  {
    return (EAttribute)modelDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMonitorDeclaration()
  {
    return monitorDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMonitorDeclaration_Name()
  {
    return (EAttribute)monitorDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAnalyzerDeclaration()
  {
    return analyzerDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAnalyzer()
  {
    return analyzerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAnalyzer_Name()
  {
    return (EAttribute)analyzerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPageDeclaration()
  {
    return pageDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPageDeclaration_Name()
  {
    return (EAttribute)pageDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getObjectAction()
  {
    return objectActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getObjectAction_Name()
  {
    return (EAttribute)objectActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModelAction()
  {
    return modelActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMonitorObjectAction()
  {
    return monitorObjectActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMonitorObjectAction_Value()
  {
    return (EAttribute)monitorObjectActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMonitorObjectAction_Method()
  {
    return (EAttribute)monitorObjectActionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAnalyzerObjectAction()
  {
    return analyzerObjectActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAnalyzerObjectAction_Value()
  {
    return (EAttribute)analyzerObjectActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAnalyzerObjectAction_Method()
  {
    return (EAttribute)analyzerObjectActionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPageObjectAction()
  {
    return pageObjectActionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPageObjectAction_Value()
  {
    return (EAttribute)pageObjectActionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPageObjectAction_Method()
  {
    return (EAttribute)pageObjectActionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getMonitorOperations()
  {
    return monitorOperationsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getAnalyzerOperations()
  {
    return analyzerOperationsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getPageOperations()
  {
    return pageOperationsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getConnectionType()
  {
    return connectionTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SWEUIBKFactory getSWEUIBKFactory()
  {
    return (SWEUIBKFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    domainmodelEClass = createEClass(DOMAINMODEL);
    createEReference(domainmodelEClass, DOMAINMODEL__ELEMENTS);
    createEReference(domainmodelEClass, DOMAINMODEL__ACTIONS);

    objectDeclarationEClass = createEClass(OBJECT_DECLARATION);

    modelDeclarationEClass = createEClass(MODEL_DECLARATION);
    createEAttribute(modelDeclarationEClass, MODEL_DECLARATION__NAME);

    monitorDeclarationEClass = createEClass(MONITOR_DECLARATION);
    createEAttribute(monitorDeclarationEClass, MONITOR_DECLARATION__NAME);

    analyzerDeclarationEClass = createEClass(ANALYZER_DECLARATION);

    analyzerEClass = createEClass(ANALYZER);
    createEAttribute(analyzerEClass, ANALYZER__NAME);

    pageDeclarationEClass = createEClass(PAGE_DECLARATION);
    createEAttribute(pageDeclarationEClass, PAGE_DECLARATION__NAME);

    objectActionEClass = createEClass(OBJECT_ACTION);
    createEAttribute(objectActionEClass, OBJECT_ACTION__NAME);

    modelActionEClass = createEClass(MODEL_ACTION);

    monitorObjectActionEClass = createEClass(MONITOR_OBJECT_ACTION);
    createEAttribute(monitorObjectActionEClass, MONITOR_OBJECT_ACTION__VALUE);
    createEAttribute(monitorObjectActionEClass, MONITOR_OBJECT_ACTION__METHOD);

    analyzerObjectActionEClass = createEClass(ANALYZER_OBJECT_ACTION);
    createEAttribute(analyzerObjectActionEClass, ANALYZER_OBJECT_ACTION__VALUE);
    createEAttribute(analyzerObjectActionEClass, ANALYZER_OBJECT_ACTION__METHOD);

    pageObjectActionEClass = createEClass(PAGE_OBJECT_ACTION);
    createEAttribute(pageObjectActionEClass, PAGE_OBJECT_ACTION__VALUE);
    createEAttribute(pageObjectActionEClass, PAGE_OBJECT_ACTION__METHOD);

    // Create enums
    monitorOperationsEEnum = createEEnum(MONITOR_OPERATIONS);
    analyzerOperationsEEnum = createEEnum(ANALYZER_OPERATIONS);
    pageOperationsEEnum = createEEnum(PAGE_OPERATIONS);
    connectionTypeEEnum = createEEnum(CONNECTION_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    modelDeclarationEClass.getESuperTypes().add(this.getObjectDeclaration());
    monitorDeclarationEClass.getESuperTypes().add(this.getObjectDeclaration());
    analyzerDeclarationEClass.getESuperTypes().add(this.getObjectDeclaration());
    analyzerEClass.getESuperTypes().add(this.getAnalyzerDeclaration());
    pageDeclarationEClass.getESuperTypes().add(this.getObjectDeclaration());
    modelActionEClass.getESuperTypes().add(this.getObjectAction());
    monitorObjectActionEClass.getESuperTypes().add(this.getObjectAction());
    analyzerObjectActionEClass.getESuperTypes().add(this.getObjectAction());
    pageObjectActionEClass.getESuperTypes().add(this.getObjectAction());

    // Initialize classes and features; add operations and parameters
    initEClass(domainmodelEClass, Domainmodel.class, "Domainmodel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDomainmodel_Elements(), this.getObjectDeclaration(), null, "elements", null, 0, -1, Domainmodel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDomainmodel_Actions(), this.getObjectAction(), null, "actions", null, 0, -1, Domainmodel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectDeclarationEClass, ObjectDeclaration.class, "ObjectDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(modelDeclarationEClass, ModelDeclaration.class, "ModelDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModelDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, ModelDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(monitorDeclarationEClass, MonitorDeclaration.class, "MonitorDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMonitorDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, MonitorDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(analyzerDeclarationEClass, AnalyzerDeclaration.class, "AnalyzerDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(analyzerEClass, Analyzer.class, "Analyzer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAnalyzer_Name(), ecorePackage.getEString(), "name", null, 0, 1, Analyzer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pageDeclarationEClass, PageDeclaration.class, "PageDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPageDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, PageDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectActionEClass, ObjectAction.class, "ObjectAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getObjectAction_Name(), ecorePackage.getEString(), "name", null, 0, 1, ObjectAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modelActionEClass, ModelAction.class, "ModelAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(monitorObjectActionEClass, MonitorObjectAction.class, "MonitorObjectAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMonitorObjectAction_Value(), this.getMonitorOperations(), "value", null, 0, 1, MonitorObjectAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMonitorObjectAction_Method(), ecorePackage.getEString(), "method", null, 0, 1, MonitorObjectAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(analyzerObjectActionEClass, AnalyzerObjectAction.class, "AnalyzerObjectAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAnalyzerObjectAction_Value(), this.getAnalyzerOperations(), "value", null, 0, 1, AnalyzerObjectAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAnalyzerObjectAction_Method(), ecorePackage.getEString(), "method", null, 0, 1, AnalyzerObjectAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pageObjectActionEClass, PageObjectAction.class, "PageObjectAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPageObjectAction_Value(), this.getPageOperations(), "value", null, 0, 1, PageObjectAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPageObjectAction_Method(), ecorePackage.getEString(), "method", null, 0, 1, PageObjectAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(monitorOperationsEEnum, MonitorOperations.class, "MonitorOperations");
    addEEnumLiteral(monitorOperationsEEnum, MonitorOperations.ADD);
    addEEnumLiteral(monitorOperationsEEnum, MonitorOperations.REMOVE);

    initEEnum(analyzerOperationsEEnum, AnalyzerOperations.class, "AnalyzerOperations");
    addEEnumLiteral(analyzerOperationsEEnum, AnalyzerOperations.LOADPAGE);
    addEEnumLiteral(analyzerOperationsEEnum, AnalyzerOperations.EXECUTE);
    addEEnumLiteral(analyzerOperationsEEnum, AnalyzerOperations.REMOVE);
    addEEnumLiteral(analyzerOperationsEEnum, AnalyzerOperations.LOADMODEL);

    initEEnum(pageOperationsEEnum, PageOperations.class, "PageOperations");
    addEEnumLiteral(pageOperationsEEnum, PageOperations.URL);
    addEEnumLiteral(pageOperationsEEnum, PageOperations.CONNECTIONTYPE);

    initEEnum(connectionTypeEEnum, ConnectionType.class, "ConnectionType");
    addEEnumLiteral(connectionTypeEEnum, ConnectionType.POST);
    addEEnumLiteral(connectionTypeEEnum, ConnectionType.GET);

    // Create resource
    createResource(eNS_URI);
  }

} //SWEUIBKPackageImpl
