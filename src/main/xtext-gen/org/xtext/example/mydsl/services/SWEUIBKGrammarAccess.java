/*
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SWEUIBKGrammarAccess extends AbstractGrammarElementFinder {
	
	public class DomainmodelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.Domainmodel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cElementsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cElementsObjectDeclarationParserRuleCall_0_0 = (RuleCall)cElementsAssignment_0.eContents().get(0);
		private final Assignment cActionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cActionsObjectActionParserRuleCall_1_0 = (RuleCall)cActionsAssignment_1.eContents().get(0);
		
		//Domainmodel:
		//	elements+=ObjectDeclaration* actions+=ObjectAction*;
		@Override public ParserRule getRule() { return rule; }
		
		//elements+=ObjectDeclaration* actions+=ObjectAction*
		public Group getGroup() { return cGroup; }
		
		//elements+=ObjectDeclaration*
		public Assignment getElementsAssignment_0() { return cElementsAssignment_0; }
		
		//ObjectDeclaration
		public RuleCall getElementsObjectDeclarationParserRuleCall_0_0() { return cElementsObjectDeclarationParserRuleCall_0_0; }
		
		//actions+=ObjectAction*
		public Assignment getActionsAssignment_1() { return cActionsAssignment_1; }
		
		//ObjectAction
		public RuleCall getActionsObjectActionParserRuleCall_1_0() { return cActionsObjectActionParserRuleCall_1_0; }
	}
	public class ObjectDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ObjectDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cMonitorAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cMonitorMonitorDeclarationParserRuleCall_0_0 = (RuleCall)cMonitorAssignment_0.eContents().get(0);
		private final Assignment cAnalyzerAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cAnalyzerAnalyzerDeclarationParserRuleCall_1_0 = (RuleCall)cAnalyzerAssignment_1.eContents().get(0);
		private final Assignment cPageAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cPagePageDeclarationParserRuleCall_2_0 = (RuleCall)cPageAssignment_2.eContents().get(0);
		private final Assignment cModelAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cModelModelDeclarationParserRuleCall_3_0 = (RuleCall)cModelAssignment_3.eContents().get(0);
		
		//ObjectDeclaration:
		//	monitor=MonitorDeclaration | analyzer=AnalyzerDeclaration | page=PageDeclaration | model=ModelDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//monitor=MonitorDeclaration | analyzer=AnalyzerDeclaration | page=PageDeclaration | model=ModelDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//monitor=MonitorDeclaration
		public Assignment getMonitorAssignment_0() { return cMonitorAssignment_0; }
		
		//MonitorDeclaration
		public RuleCall getMonitorMonitorDeclarationParserRuleCall_0_0() { return cMonitorMonitorDeclarationParserRuleCall_0_0; }
		
		//analyzer=AnalyzerDeclaration
		public Assignment getAnalyzerAssignment_1() { return cAnalyzerAssignment_1; }
		
		//AnalyzerDeclaration
		public RuleCall getAnalyzerAnalyzerDeclarationParserRuleCall_1_0() { return cAnalyzerAnalyzerDeclarationParserRuleCall_1_0; }
		
		//page=PageDeclaration
		public Assignment getPageAssignment_2() { return cPageAssignment_2; }
		
		//PageDeclaration
		public RuleCall getPagePageDeclarationParserRuleCall_2_0() { return cPagePageDeclarationParserRuleCall_2_0; }
		
		//model=ModelDeclaration
		public Assignment getModelAssignment_3() { return cModelAssignment_3; }
		
		//ModelDeclaration
		public RuleCall getModelModelDeclarationParserRuleCall_3_0() { return cModelModelDeclarationParserRuleCall_3_0; }
	}
	public class ModelDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ModelDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameModelParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ModelDeclaration:
		//	'Model' name=Model;
		@Override public ParserRule getRule() { return rule; }
		
		//'Model' name=Model
		public Group getGroup() { return cGroup; }
		
		//'Model'
		public Keyword getModelKeyword_0() { return cModelKeyword_0; }
		
		//name=Model
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Model
		public RuleCall getNameModelParserRuleCall_1_0() { return cNameModelParserRuleCall_1_0; }
	}
	public class AnalyzerDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.AnalyzerDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalyzerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameAnalyzerParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//AnalyzerDeclaration:
		//	'Analyzer' name=Analyzer;
		@Override public ParserRule getRule() { return rule; }
		
		//'Analyzer' name=Analyzer
		public Group getGroup() { return cGroup; }
		
		//'Analyzer'
		public Keyword getAnalyzerKeyword_0() { return cAnalyzerKeyword_0; }
		
		//name=Analyzer
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Analyzer
		public RuleCall getNameAnalyzerParserRuleCall_1_0() { return cNameAnalyzerParserRuleCall_1_0; }
	}
	public class MonitorDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MonitorDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMonitorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameMonitorParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cUrlAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUrlMonitorInitializationParserRuleCall_2_0 = (RuleCall)cUrlAssignment_2.eContents().get(0);
		
		//MonitorDeclaration:
		//	'Monitor' name=Monitor url=MonitorInitialization;
		@Override public ParserRule getRule() { return rule; }
		
		//'Monitor' name=Monitor url=MonitorInitialization
		public Group getGroup() { return cGroup; }
		
		//'Monitor'
		public Keyword getMonitorKeyword_0() { return cMonitorKeyword_0; }
		
		//name=Monitor
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Monitor
		public RuleCall getNameMonitorParserRuleCall_1_0() { return cNameMonitorParserRuleCall_1_0; }
		
		//url=MonitorInitialization
		public Assignment getUrlAssignment_2() { return cUrlAssignment_2; }
		
		//MonitorInitialization
		public RuleCall getUrlMonitorInitializationParserRuleCall_2_0() { return cUrlMonitorInitializationParserRuleCall_2_0; }
	}
	public class PageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.PageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamePageParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//PageDeclaration:
		//	'Page' name=Page;
		@Override public ParserRule getRule() { return rule; }
		
		//'Page' name=Page
		public Group getGroup() { return cGroup; }
		
		//'Page'
		public Keyword getPageKeyword_0() { return cPageKeyword_0; }
		
		//name=Page
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Page
		public RuleCall getNamePageParserRuleCall_1_0() { return cNamePageParserRuleCall_1_0; }
	}
	public class AnalyzerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.Analyzer");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Analyzer:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.Model");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Model:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class MonitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.Monitor");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Monitor:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class PageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.Page");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Page:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class MonitorInitializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MonitorInitialization");
		private final Assignment cUrlAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cUrlSTRINGTerminalRuleCall_0 = (RuleCall)cUrlAssignment.eContents().get(0);
		
		//MonitorInitialization:
		//	url=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//url=STRING
		public Assignment getUrlAssignment() { return cUrlAssignment; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_0() { return cUrlSTRINGTerminalRuleCall_0; }
	}
	public class ObjectActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ObjectAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cMonitorActionAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cMonitorActionMonitorObjectActionParserRuleCall_0_0 = (RuleCall)cMonitorActionAssignment_0.eContents().get(0);
		private final Assignment cAnalyzerActionAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cAnalyzerActionAnalyzerObjectActionParserRuleCall_1_0 = (RuleCall)cAnalyzerActionAssignment_1.eContents().get(0);
		private final Assignment cPageActionAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cPageActionPageObjectActionParserRuleCall_2_0 = (RuleCall)cPageActionAssignment_2.eContents().get(0);
		private final Assignment cModelActionAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cModelActionModelActionParserRuleCall_3_0 = (RuleCall)cModelActionAssignment_3.eContents().get(0);
		
		//ObjectAction:
		//	monitorAction=MonitorObjectAction | analyzerAction=AnalyzerObjectAction | pageAction=PageObjectAction |
		//	modelAction=ModelAction;
		@Override public ParserRule getRule() { return rule; }
		
		//monitorAction=MonitorObjectAction | analyzerAction=AnalyzerObjectAction | pageAction=PageObjectAction |
		//modelAction=ModelAction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//monitorAction=MonitorObjectAction
		public Assignment getMonitorActionAssignment_0() { return cMonitorActionAssignment_0; }
		
		//MonitorObjectAction
		public RuleCall getMonitorActionMonitorObjectActionParserRuleCall_0_0() { return cMonitorActionMonitorObjectActionParserRuleCall_0_0; }
		
		//analyzerAction=AnalyzerObjectAction
		public Assignment getAnalyzerActionAssignment_1() { return cAnalyzerActionAssignment_1; }
		
		//AnalyzerObjectAction
		public RuleCall getAnalyzerActionAnalyzerObjectActionParserRuleCall_1_0() { return cAnalyzerActionAnalyzerObjectActionParserRuleCall_1_0; }
		
		//pageAction=PageObjectAction
		public Assignment getPageActionAssignment_2() { return cPageActionAssignment_2; }
		
		//PageObjectAction
		public RuleCall getPageActionPageObjectActionParserRuleCall_2_0() { return cPageActionPageObjectActionParserRuleCall_2_0; }
		
		//modelAction=ModelAction
		public Assignment getModelActionAssignment_3() { return cModelActionAssignment_3; }
		
		//ModelAction
		public RuleCall getModelActionModelActionParserRuleCall_3_0() { return cModelActionModelActionParserRuleCall_3_0; }
	}
	public class ModelActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ModelAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLoadStructureKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cModelStructureAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cModelStructureModelStructureParserRuleCall_4_0 = (RuleCall)cModelStructureAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ModelAction:
		//	name=ID '.' 'loadStructure' '(' modelStructure=ModelStructure+ ')';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '.' 'loadStructure' '(' modelStructure=ModelStructure+ ')'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//'loadStructure'
		public Keyword getLoadStructureKeyword_2() { return cLoadStructureKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//modelStructure=ModelStructure+
		public Assignment getModelStructureAssignment_4() { return cModelStructureAssignment_4; }
		
		//ModelStructure
		public RuleCall getModelStructureModelStructureParserRuleCall_4_0() { return cModelStructureModelStructureParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class ModelStructureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ModelStructure");
		private final Assignment cSourceAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSourceSTRINGTerminalRuleCall_0 = (RuleCall)cSourceAssignment.eContents().get(0);
		
		//ModelStructure:
		//	source=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//source=STRING
		public Assignment getSourceAssignment() { return cSourceAssignment; }
		
		//STRING
		public RuleCall getSourceSTRINGTerminalRuleCall_0() { return cSourceSTRINGTerminalRuleCall_0; }
	}
	public class MonitorObjectActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MonitorObjectAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueMonitorOperationsEnumRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodIDTerminalRuleCall_4_0 = (RuleCall)cMethodAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MonitorObjectAction:
		//	name=ID '.' value=MonitorOperations '(' method=ID? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '.' value=MonitorOperations '(' method=ID? ')'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//value=MonitorOperations
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//MonitorOperations
		public RuleCall getValueMonitorOperationsEnumRuleCall_2_0() { return cValueMonitorOperationsEnumRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//method=ID?
		public Assignment getMethodAssignment_4() { return cMethodAssignment_4; }
		
		//ID
		public RuleCall getMethodIDTerminalRuleCall_4_0() { return cMethodIDTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class AnalyzerObjectActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.AnalyzerObjectAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAnalyzerOperationsEnumRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodIDTerminalRuleCall_4_0 = (RuleCall)cMethodAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AnalyzerObjectAction:
		//	name=ID '.' value=AnalyzerOperations '(' method=ID? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '.' value=AnalyzerOperations '(' method=ID? ')'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//value=AnalyzerOperations
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//AnalyzerOperations
		public RuleCall getValueAnalyzerOperationsEnumRuleCall_2_0() { return cValueAnalyzerOperationsEnumRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//method=ID?
		public Assignment getMethodAssignment_4() { return cMethodAssignment_4; }
		
		//ID
		public RuleCall getMethodIDTerminalRuleCall_4_0() { return cMethodIDTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class PageObjectActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.PageObjectAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cValueAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cValuePageOperationsEnumRuleCall_2_0_0_0 = (RuleCall)cValueAssignment_2_0_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cMethodAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cMethodSTRINGTerminalRuleCall_2_0_2_0 = (RuleCall)cMethodAssignment_2_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_0_3 = (Keyword)cGroup_2_0.eContents().get(3);
		private final Assignment cHeaderListAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cHeaderListGenerateHeaderParserRuleCall_2_1_0 = (RuleCall)cHeaderListAssignment_2_1.eContents().get(0);
		private final Assignment cSetConnectionTypeAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cSetConnectionTypeSetConnecttionTypeParserRuleCall_2_2_0 = (RuleCall)cSetConnectionTypeAssignment_2_2.eContents().get(0);
		
		//PageObjectAction:
		//	name=ID '.' (value=PageOperations '(' method=STRING? ')' | headerList=GenerateHeader |
		//	setConnectionType=SetConnecttionType);
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '.' (value=PageOperations '(' method=STRING? ')' | headerList=GenerateHeader |
		//setConnectionType=SetConnecttionType)
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//(value=PageOperations '(' method=STRING? ')' | headerList=GenerateHeader | setConnectionType=SetConnecttionType)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//value=PageOperations '(' method=STRING? ')'
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//value=PageOperations
		public Assignment getValueAssignment_2_0_0() { return cValueAssignment_2_0_0; }
		
		//PageOperations
		public RuleCall getValuePageOperationsEnumRuleCall_2_0_0_0() { return cValuePageOperationsEnumRuleCall_2_0_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0_1() { return cLeftParenthesisKeyword_2_0_1; }
		
		//method=STRING?
		public Assignment getMethodAssignment_2_0_2() { return cMethodAssignment_2_0_2; }
		
		//STRING
		public RuleCall getMethodSTRINGTerminalRuleCall_2_0_2_0() { return cMethodSTRINGTerminalRuleCall_2_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_0_3() { return cRightParenthesisKeyword_2_0_3; }
		
		//headerList=GenerateHeader
		public Assignment getHeaderListAssignment_2_1() { return cHeaderListAssignment_2_1; }
		
		//GenerateHeader
		public RuleCall getHeaderListGenerateHeaderParserRuleCall_2_1_0() { return cHeaderListGenerateHeaderParserRuleCall_2_1_0; }
		
		//setConnectionType=SetConnecttionType
		public Assignment getSetConnectionTypeAssignment_2_2() { return cSetConnectionTypeAssignment_2_2; }
		
		//SetConnecttionType
		public RuleCall getSetConnectionTypeSetConnecttionTypeParserRuleCall_2_2_0() { return cSetConnectionTypeSetConnecttionTypeParserRuleCall_2_2_0; }
	}
	public class GenerateHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.GenerateHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGenerateHeaderListKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHeaderAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHeaderHeaderParserRuleCall_2_0 = (RuleCall)cHeaderAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//GenerateHeader:
		//	'generateHeaderList' '(' header+=Header* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'generateHeaderList' '(' header+=Header* ')'
		public Group getGroup() { return cGroup; }
		
		//'generateHeaderList'
		public Keyword getGenerateHeaderListKeyword_0() { return cGenerateHeaderListKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//header+=Header*
		public Assignment getHeaderAssignment_2() { return cHeaderAssignment_2; }
		
		//Header
		public RuleCall getHeaderHeaderParserRuleCall_2_0() { return cHeaderHeaderParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class SetConnecttionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.SetConnecttionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnectTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeConnectionTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SetConnecttionType:
		//	'connectType' '(' type=ConnectionType ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'connectType' '(' type=ConnectionType ')'
		public Group getGroup() { return cGroup; }
		
		//'connectType'
		public Keyword getConnectTypeKeyword_0() { return cConnectTypeKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//type=ConnectionType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//ConnectionType
		public RuleCall getTypeConnectionTypeEnumRuleCall_2_0() { return cTypeConnectionTypeEnumRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class HeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.Header");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeySTRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHeaderValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHeaderValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cHeaderValueAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Header:
		//	key=STRING '(' headerValue=STRING ')';
		@Override public ParserRule getRule() { return rule; }
		
		//key=STRING '(' headerValue=STRING ')'
		public Group getGroup() { return cGroup; }
		
		//key=STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_0_0() { return cKeySTRINGTerminalRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//headerValue=STRING
		public Assignment getHeaderValueAssignment_2() { return cHeaderValueAssignment_2; }
		
		//STRING
		public RuleCall getHeaderValueSTRINGTerminalRuleCall_2_0() { return cHeaderValueSTRINGTerminalRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class MethodParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MethodParameter");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//MethodParameter:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	
	public class MonitorOperationsElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MonitorOperations");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cADDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cADDAddAnalyzerKeyword_0_0 = (Keyword)cADDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cREMOVEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cREMOVERemoveAnalyzerKeyword_1_0 = (Keyword)cREMOVEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum MonitorOperations:
		//	ADD='AddAnalyzer' |
		//	REMOVE='RemoveAnalyzer';
		public EnumRule getRule() { return rule; }
		
		//ADD='AddAnalyzer' | REMOVE='RemoveAnalyzer'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ADD='AddAnalyzer'
		public EnumLiteralDeclaration getADDEnumLiteralDeclaration_0() { return cADDEnumLiteralDeclaration_0; }
		
		//'AddAnalyzer'
		public Keyword getADDAddAnalyzerKeyword_0_0() { return cADDAddAnalyzerKeyword_0_0; }
		
		//REMOVE='RemoveAnalyzer'
		public EnumLiteralDeclaration getREMOVEEnumLiteralDeclaration_1() { return cREMOVEEnumLiteralDeclaration_1; }
		
		//'RemoveAnalyzer'
		public Keyword getREMOVERemoveAnalyzerKeyword_1_0() { return cREMOVERemoveAnalyzerKeyword_1_0; }
	}
	public class AnalyzerOperationsElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.AnalyzerOperations");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEXECUTEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEXECUTEExecuteKeyword_0_0 = (Keyword)cEXECUTEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLOADPAGEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLOADPAGELoadPageKeyword_1_0 = (Keyword)cLOADPAGEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLOADMODELEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLOADMODELLoadModelKeyword_2_0 = (Keyword)cLOADMODELEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AnalyzerOperations:
		//	EXECUTE='Execute' |
		//	LOADPAGE='LoadPage' |
		//	LOADMODEL='LoadModel';
		public EnumRule getRule() { return rule; }
		
		//EXECUTE='Execute' | LOADPAGE='LoadPage' | LOADMODEL='LoadModel'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EXECUTE='Execute'
		public EnumLiteralDeclaration getEXECUTEEnumLiteralDeclaration_0() { return cEXECUTEEnumLiteralDeclaration_0; }
		
		//'Execute'
		public Keyword getEXECUTEExecuteKeyword_0_0() { return cEXECUTEExecuteKeyword_0_0; }
		
		//LOADPAGE='LoadPage'
		public EnumLiteralDeclaration getLOADPAGEEnumLiteralDeclaration_1() { return cLOADPAGEEnumLiteralDeclaration_1; }
		
		//'LoadPage'
		public Keyword getLOADPAGELoadPageKeyword_1_0() { return cLOADPAGELoadPageKeyword_1_0; }
		
		//LOADMODEL='LoadModel'
		public EnumLiteralDeclaration getLOADMODELEnumLiteralDeclaration_2() { return cLOADMODELEnumLiteralDeclaration_2; }
		
		//'LoadModel'
		public Keyword getLOADMODELLoadModelKeyword_2_0() { return cLOADMODELLoadModelKeyword_2_0; }
	}
	public class PageOperationsElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.PageOperations");
		private final EnumLiteralDeclaration cURLEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cURLUrlKeyword_0 = (Keyword)cURLEnumLiteralDeclaration.eContents().get(0);
		
		//enum PageOperations:
		//	URL='url';
		public EnumRule getRule() { return rule; }
		
		//URL='url'
		public EnumLiteralDeclaration getURLEnumLiteralDeclaration() { return cURLEnumLiteralDeclaration; }
		
		//'url'
		public Keyword getURLUrlKeyword_0() { return cURLUrlKeyword_0; }
	}
	public class ConnectionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ConnectionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPOSTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPOSTPostKeyword_0_0 = (Keyword)cPOSTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGETEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGETGetKeyword_1_0 = (Keyword)cGETEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ConnectionType:
		//	POST='post' |
		//	GET='get';
		public EnumRule getRule() { return rule; }
		
		//POST='post' | GET='get'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//POST='post'
		public EnumLiteralDeclaration getPOSTEnumLiteralDeclaration_0() { return cPOSTEnumLiteralDeclaration_0; }
		
		//'post'
		public Keyword getPOSTPostKeyword_0_0() { return cPOSTPostKeyword_0_0; }
		
		//GET='get'
		public EnumLiteralDeclaration getGETEnumLiteralDeclaration_1() { return cGETEnumLiteralDeclaration_1; }
		
		//'get'
		public Keyword getGETGetKeyword_1_0() { return cGETGetKeyword_1_0; }
	}
	
	private final DomainmodelElements pDomainmodel;
	private final ObjectDeclarationElements pObjectDeclaration;
	private final ModelDeclarationElements pModelDeclaration;
	private final AnalyzerDeclarationElements pAnalyzerDeclaration;
	private final MonitorDeclarationElements pMonitorDeclaration;
	private final PageDeclarationElements pPageDeclaration;
	private final AnalyzerElements pAnalyzer;
	private final ModelElements pModel;
	private final MonitorElements pMonitor;
	private final PageElements pPage;
	private final MonitorInitializationElements pMonitorInitialization;
	private final ObjectActionElements pObjectAction;
	private final ModelActionElements pModelAction;
	private final ModelStructureElements pModelStructure;
	private final MonitorObjectActionElements pMonitorObjectAction;
	private final AnalyzerObjectActionElements pAnalyzerObjectAction;
	private final PageObjectActionElements pPageObjectAction;
	private final GenerateHeaderElements pGenerateHeader;
	private final SetConnecttionTypeElements pSetConnecttionType;
	private final HeaderElements pHeader;
	private final MethodParameterElements pMethodParameter;
	private final MonitorOperationsElements eMonitorOperations;
	private final AnalyzerOperationsElements eAnalyzerOperations;
	private final PageOperationsElements ePageOperations;
	private final ConnectionTypeElements eConnectionType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SWEUIBKGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomainmodel = new DomainmodelElements();
		this.pObjectDeclaration = new ObjectDeclarationElements();
		this.pModelDeclaration = new ModelDeclarationElements();
		this.pAnalyzerDeclaration = new AnalyzerDeclarationElements();
		this.pMonitorDeclaration = new MonitorDeclarationElements();
		this.pPageDeclaration = new PageDeclarationElements();
		this.pAnalyzer = new AnalyzerElements();
		this.pModel = new ModelElements();
		this.pMonitor = new MonitorElements();
		this.pPage = new PageElements();
		this.pMonitorInitialization = new MonitorInitializationElements();
		this.pObjectAction = new ObjectActionElements();
		this.pModelAction = new ModelActionElements();
		this.pModelStructure = new ModelStructureElements();
		this.pMonitorObjectAction = new MonitorObjectActionElements();
		this.pAnalyzerObjectAction = new AnalyzerObjectActionElements();
		this.pPageObjectAction = new PageObjectActionElements();
		this.pGenerateHeader = new GenerateHeaderElements();
		this.pSetConnecttionType = new SetConnecttionTypeElements();
		this.pHeader = new HeaderElements();
		this.pMethodParameter = new MethodParameterElements();
		this.eMonitorOperations = new MonitorOperationsElements();
		this.eAnalyzerOperations = new AnalyzerOperationsElements();
		this.ePageOperations = new PageOperationsElements();
		this.eConnectionType = new ConnectionTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.SWEUIBK".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Domainmodel:
	//	elements+=ObjectDeclaration* actions+=ObjectAction*;
	public DomainmodelElements getDomainmodelAccess() {
		return pDomainmodel;
	}
	
	public ParserRule getDomainmodelRule() {
		return getDomainmodelAccess().getRule();
	}
	
	//ObjectDeclaration:
	//	monitor=MonitorDeclaration | analyzer=AnalyzerDeclaration | page=PageDeclaration | model=ModelDeclaration;
	public ObjectDeclarationElements getObjectDeclarationAccess() {
		return pObjectDeclaration;
	}
	
	public ParserRule getObjectDeclarationRule() {
		return getObjectDeclarationAccess().getRule();
	}
	
	//ModelDeclaration:
	//	'Model' name=Model;
	public ModelDeclarationElements getModelDeclarationAccess() {
		return pModelDeclaration;
	}
	
	public ParserRule getModelDeclarationRule() {
		return getModelDeclarationAccess().getRule();
	}
	
	//AnalyzerDeclaration:
	//	'Analyzer' name=Analyzer;
	public AnalyzerDeclarationElements getAnalyzerDeclarationAccess() {
		return pAnalyzerDeclaration;
	}
	
	public ParserRule getAnalyzerDeclarationRule() {
		return getAnalyzerDeclarationAccess().getRule();
	}
	
	//MonitorDeclaration:
	//	'Monitor' name=Monitor url=MonitorInitialization;
	public MonitorDeclarationElements getMonitorDeclarationAccess() {
		return pMonitorDeclaration;
	}
	
	public ParserRule getMonitorDeclarationRule() {
		return getMonitorDeclarationAccess().getRule();
	}
	
	//PageDeclaration:
	//	'Page' name=Page;
	public PageDeclarationElements getPageDeclarationAccess() {
		return pPageDeclaration;
	}
	
	public ParserRule getPageDeclarationRule() {
		return getPageDeclarationAccess().getRule();
	}
	
	//Analyzer:
	//	name=ID;
	public AnalyzerElements getAnalyzerAccess() {
		return pAnalyzer;
	}
	
	public ParserRule getAnalyzerRule() {
		return getAnalyzerAccess().getRule();
	}
	
	//Model:
	//	name=ID;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Monitor:
	//	name=ID;
	public MonitorElements getMonitorAccess() {
		return pMonitor;
	}
	
	public ParserRule getMonitorRule() {
		return getMonitorAccess().getRule();
	}
	
	//Page:
	//	name=ID;
	public PageElements getPageAccess() {
		return pPage;
	}
	
	public ParserRule getPageRule() {
		return getPageAccess().getRule();
	}
	
	//MonitorInitialization:
	//	url=STRING;
	public MonitorInitializationElements getMonitorInitializationAccess() {
		return pMonitorInitialization;
	}
	
	public ParserRule getMonitorInitializationRule() {
		return getMonitorInitializationAccess().getRule();
	}
	
	//ObjectAction:
	//	monitorAction=MonitorObjectAction | analyzerAction=AnalyzerObjectAction | pageAction=PageObjectAction |
	//	modelAction=ModelAction;
	public ObjectActionElements getObjectActionAccess() {
		return pObjectAction;
	}
	
	public ParserRule getObjectActionRule() {
		return getObjectActionAccess().getRule();
	}
	
	//ModelAction:
	//	name=ID '.' 'loadStructure' '(' modelStructure=ModelStructure+ ')';
	public ModelActionElements getModelActionAccess() {
		return pModelAction;
	}
	
	public ParserRule getModelActionRule() {
		return getModelActionAccess().getRule();
	}
	
	//ModelStructure:
	//	source=STRING;
	public ModelStructureElements getModelStructureAccess() {
		return pModelStructure;
	}
	
	public ParserRule getModelStructureRule() {
		return getModelStructureAccess().getRule();
	}
	
	//MonitorObjectAction:
	//	name=ID '.' value=MonitorOperations '(' method=ID? ')';
	public MonitorObjectActionElements getMonitorObjectActionAccess() {
		return pMonitorObjectAction;
	}
	
	public ParserRule getMonitorObjectActionRule() {
		return getMonitorObjectActionAccess().getRule();
	}
	
	//AnalyzerObjectAction:
	//	name=ID '.' value=AnalyzerOperations '(' method=ID? ')';
	public AnalyzerObjectActionElements getAnalyzerObjectActionAccess() {
		return pAnalyzerObjectAction;
	}
	
	public ParserRule getAnalyzerObjectActionRule() {
		return getAnalyzerObjectActionAccess().getRule();
	}
	
	//PageObjectAction:
	//	name=ID '.' (value=PageOperations '(' method=STRING? ')' | headerList=GenerateHeader |
	//	setConnectionType=SetConnecttionType);
	public PageObjectActionElements getPageObjectActionAccess() {
		return pPageObjectAction;
	}
	
	public ParserRule getPageObjectActionRule() {
		return getPageObjectActionAccess().getRule();
	}
	
	//GenerateHeader:
	//	'generateHeaderList' '(' header+=Header* ')';
	public GenerateHeaderElements getGenerateHeaderAccess() {
		return pGenerateHeader;
	}
	
	public ParserRule getGenerateHeaderRule() {
		return getGenerateHeaderAccess().getRule();
	}
	
	//SetConnecttionType:
	//	'connectType' '(' type=ConnectionType ')';
	public SetConnecttionTypeElements getSetConnecttionTypeAccess() {
		return pSetConnecttionType;
	}
	
	public ParserRule getSetConnecttionTypeRule() {
		return getSetConnecttionTypeAccess().getRule();
	}
	
	//Header:
	//	key=STRING '(' headerValue=STRING ')';
	public HeaderElements getHeaderAccess() {
		return pHeader;
	}
	
	public ParserRule getHeaderRule() {
		return getHeaderAccess().getRule();
	}
	
	//MethodParameter:
	//	name=ID;
	public MethodParameterElements getMethodParameterAccess() {
		return pMethodParameter;
	}
	
	public ParserRule getMethodParameterRule() {
		return getMethodParameterAccess().getRule();
	}
	
	//enum MonitorOperations:
	//	ADD='AddAnalyzer' |
	//	REMOVE='RemoveAnalyzer';
	public MonitorOperationsElements getMonitorOperationsAccess() {
		return eMonitorOperations;
	}
	
	public EnumRule getMonitorOperationsRule() {
		return getMonitorOperationsAccess().getRule();
	}
	
	//enum AnalyzerOperations:
	//	EXECUTE='Execute' |
	//	LOADPAGE='LoadPage' |
	//	LOADMODEL='LoadModel';
	public AnalyzerOperationsElements getAnalyzerOperationsAccess() {
		return eAnalyzerOperations;
	}
	
	public EnumRule getAnalyzerOperationsRule() {
		return getAnalyzerOperationsAccess().getRule();
	}
	
	//enum PageOperations:
	//	URL='url';
	public PageOperationsElements getPageOperationsAccess() {
		return ePageOperations;
	}
	
	public EnumRule getPageOperationsRule() {
		return getPageOperationsAccess().getRule();
	}
	
	//enum ConnectionType:
	//	POST='post' |
	//	GET='get';
	public ConnectionTypeElements getConnectionTypeAccess() {
		return eConnectionType;
	}
	
	public EnumRule getConnectionTypeRule() {
		return getConnectionTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
