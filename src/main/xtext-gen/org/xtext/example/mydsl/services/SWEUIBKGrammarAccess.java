/*
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SWEUIBKGrammarAccess extends AbstractGrammarElementFinder {
	
	public class DomainmodelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.Domainmodel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cElementsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cElementsObjectDeclarationParserRuleCall_0_0 = (RuleCall)cElementsAssignment_0.eContents().get(0);
		private final Assignment cActionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cActionsObjectActionParserRuleCall_1_0 = (RuleCall)cActionsAssignment_1.eContents().get(0);
		
		//Domainmodel:
		//	elements+=ObjectDeclaration* actions+=ObjectAction*;
		@Override public ParserRule getRule() { return rule; }
		
		//elements+=ObjectDeclaration* actions+=ObjectAction*
		public Group getGroup() { return cGroup; }
		
		//elements+=ObjectDeclaration*
		public Assignment getElementsAssignment_0() { return cElementsAssignment_0; }
		
		//ObjectDeclaration
		public RuleCall getElementsObjectDeclarationParserRuleCall_0_0() { return cElementsObjectDeclarationParserRuleCall_0_0; }
		
		//actions+=ObjectAction*
		public Assignment getActionsAssignment_1() { return cActionsAssignment_1; }
		
		//ObjectAction
		public RuleCall getActionsObjectActionParserRuleCall_1_0() { return cActionsObjectActionParserRuleCall_1_0; }
	}
	public class ObjectDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ObjectDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMonitorDeclarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnalyzerDeclarationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPageDeclarationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cModelDeclarationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ObjectDeclaration:
		//	MonitorDeclaration | AnalyzerDeclaration | PageDeclaration | ModelDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//MonitorDeclaration | AnalyzerDeclaration | PageDeclaration | ModelDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MonitorDeclaration
		public RuleCall getMonitorDeclarationParserRuleCall_0() { return cMonitorDeclarationParserRuleCall_0; }
		
		//AnalyzerDeclaration
		public RuleCall getAnalyzerDeclarationParserRuleCall_1() { return cAnalyzerDeclarationParserRuleCall_1; }
		
		//PageDeclaration
		public RuleCall getPageDeclarationParserRuleCall_2() { return cPageDeclarationParserRuleCall_2; }
		
		//ModelDeclaration
		public RuleCall getModelDeclarationParserRuleCall_3() { return cModelDeclarationParserRuleCall_3; }
	}
	public class ModelDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ModelDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ModelDeclaration:
		//	'Model' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'Model' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Model'
		public Keyword getModelKeyword_0() { return cModelKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class MonitorDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MonitorDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMonitorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cMonitorInitializationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MonitorDeclaration:
		//	'Monitor' name=ID MonitorInitialization;
		@Override public ParserRule getRule() { return rule; }
		
		//'Monitor' name=ID MonitorInitialization
		public Group getGroup() { return cGroup; }
		
		//'Monitor'
		public Keyword getMonitorKeyword_0() { return cMonitorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//MonitorInitialization
		public RuleCall getMonitorInitializationParserRuleCall_2() { return cMonitorInitializationParserRuleCall_2; }
	}
	public class MonitorInitializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MonitorInitialization");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//MonitorInitialization:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class AnalyzerDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.AnalyzerDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalyzerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cAnalyzerParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AnalyzerDeclaration:
		//	'Analyzer' Analyzer;
		@Override public ParserRule getRule() { return rule; }
		
		//'Analyzer' Analyzer
		public Group getGroup() { return cGroup; }
		
		//'Analyzer'
		public Keyword getAnalyzerKeyword_0() { return cAnalyzerKeyword_0; }
		
		//Analyzer
		public RuleCall getAnalyzerParserRuleCall_1() { return cAnalyzerParserRuleCall_1; }
	}
	public class AnalyzerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.Analyzer");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Analyzer:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class PageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.PageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//PageDeclaration:
		//	'Page' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'Page' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Page'
		public Keyword getPageKeyword_0() { return cPageKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class ObjectActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ObjectAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMonitorObjectActionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnalyzerObjectActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPageObjectActionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cModelActionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ObjectAction:
		//	MonitorObjectAction | AnalyzerObjectAction | PageObjectAction | ModelAction;
		@Override public ParserRule getRule() { return rule; }
		
		//MonitorObjectAction | AnalyzerObjectAction | PageObjectAction | ModelAction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MonitorObjectAction
		public RuleCall getMonitorObjectActionParserRuleCall_0() { return cMonitorObjectActionParserRuleCall_0; }
		
		//AnalyzerObjectAction
		public RuleCall getAnalyzerObjectActionParserRuleCall_1() { return cAnalyzerObjectActionParserRuleCall_1; }
		
		//PageObjectAction
		public RuleCall getPageObjectActionParserRuleCall_2() { return cPageObjectActionParserRuleCall_2; }
		
		//ModelAction
		public RuleCall getModelActionParserRuleCall_3() { return cModelActionParserRuleCall_3; }
	}
	public class ModelActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ModelAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLoadStructureKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cModelStructureParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ModelAction:
		//	name=ID '.' 'loadStructure' '(' ModelStructure+ ')';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '.' 'loadStructure' '(' ModelStructure+ ')'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//'loadStructure'
		public Keyword getLoadStructureKeyword_2() { return cLoadStructureKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//ModelStructure+
		public RuleCall getModelStructureParserRuleCall_4() { return cModelStructureParserRuleCall_4; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class ModelStructureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ModelStructure");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ModelStructure:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class MonitorObjectActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MonitorObjectAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueMonitorOperationsEnumRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodMethodParameterParserRuleCall_4_0 = (RuleCall)cMethodAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MonitorObjectAction:
		//	name=ID '.' value=MonitorOperations '(' method=MethodParameter? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '.' value=MonitorOperations '(' method=MethodParameter? ')'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//value=MonitorOperations
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//MonitorOperations
		public RuleCall getValueMonitorOperationsEnumRuleCall_2_0() { return cValueMonitorOperationsEnumRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//method=MethodParameter?
		public Assignment getMethodAssignment_4() { return cMethodAssignment_4; }
		
		//MethodParameter
		public RuleCall getMethodMethodParameterParserRuleCall_4_0() { return cMethodMethodParameterParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class AnalyzerObjectActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.AnalyzerObjectAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAnalyzerOperationsEnumRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodMethodParameterParserRuleCall_4_0 = (RuleCall)cMethodAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AnalyzerObjectAction:
		//	name=ID '.' value=AnalyzerOperations '(' method=MethodParameter? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '.' value=AnalyzerOperations '(' method=MethodParameter? ')'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//value=AnalyzerOperations
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//AnalyzerOperations
		public RuleCall getValueAnalyzerOperationsEnumRuleCall_2_0() { return cValueAnalyzerOperationsEnumRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//method=MethodParameter?
		public Assignment getMethodAssignment_4() { return cMethodAssignment_4; }
		
		//MethodParameter
		public RuleCall getMethodMethodParameterParserRuleCall_4_0() { return cMethodMethodParameterParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class PageObjectActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.PageObjectAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cValueAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cValuePageOperationsEnumRuleCall_2_0_0_0 = (RuleCall)cValueAssignment_2_0_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cMethodAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cMethodMethodParameterParserRuleCall_2_0_2_0 = (RuleCall)cMethodAssignment_2_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_0_3 = (Keyword)cGroup_2_0.eContents().get(3);
		private final RuleCall cGenerateHeaderParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//PageObjectAction:
		//	name=ID '.' (value=PageOperations '(' method=MethodParameter? ')' | GenerateHeader);
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '.' (value=PageOperations '(' method=MethodParameter? ')' | GenerateHeader)
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//(value=PageOperations '(' method=MethodParameter? ')' | GenerateHeader)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//value=PageOperations '(' method=MethodParameter? ')'
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//value=PageOperations
		public Assignment getValueAssignment_2_0_0() { return cValueAssignment_2_0_0; }
		
		//PageOperations
		public RuleCall getValuePageOperationsEnumRuleCall_2_0_0_0() { return cValuePageOperationsEnumRuleCall_2_0_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0_1() { return cLeftParenthesisKeyword_2_0_1; }
		
		//method=MethodParameter?
		public Assignment getMethodAssignment_2_0_2() { return cMethodAssignment_2_0_2; }
		
		//MethodParameter
		public RuleCall getMethodMethodParameterParserRuleCall_2_0_2_0() { return cMethodMethodParameterParserRuleCall_2_0_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_0_3() { return cRightParenthesisKeyword_2_0_3; }
		
		//GenerateHeader
		public RuleCall getGenerateHeaderParserRuleCall_2_1() { return cGenerateHeaderParserRuleCall_2_1; }
	}
	public class GenerateHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.GenerateHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGenerateHeaderListKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cHeaderParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//GenerateHeader:
		//	'generateHeaderList' '(' Header* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'generateHeaderList' '(' Header* ')'
		public Group getGroup() { return cGroup; }
		
		//'generateHeaderList'
		public Keyword getGenerateHeaderListKeyword_0() { return cGenerateHeaderListKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//Header*
		public RuleCall getHeaderParserRuleCall_2() { return cHeaderParserRuleCall_2; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class HeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.Header");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Header:
		//	STRING '(' STRING ')';
		@Override public ParserRule getRule() { return rule; }
		
		//STRING '(' STRING ')'
		public Group getGroup() { return cGroup; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class MethodParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MethodParameter");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//MethodParameter:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	
	public class MonitorOperationsElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.MonitorOperations");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cADDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cADDAddAnalyzerKeyword_0_0 = (Keyword)cADDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cREMOVEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cREMOVERemoveAnalyzerKeyword_1_0 = (Keyword)cREMOVEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum MonitorOperations:
		//	ADD='AddAnalyzer' |
		//	REMOVE='RemoveAnalyzer';
		public EnumRule getRule() { return rule; }
		
		//ADD='AddAnalyzer' | REMOVE='RemoveAnalyzer'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ADD='AddAnalyzer'
		public EnumLiteralDeclaration getADDEnumLiteralDeclaration_0() { return cADDEnumLiteralDeclaration_0; }
		
		//'AddAnalyzer'
		public Keyword getADDAddAnalyzerKeyword_0_0() { return cADDAddAnalyzerKeyword_0_0; }
		
		//REMOVE='RemoveAnalyzer'
		public EnumLiteralDeclaration getREMOVEEnumLiteralDeclaration_1() { return cREMOVEEnumLiteralDeclaration_1; }
		
		//'RemoveAnalyzer'
		public Keyword getREMOVERemoveAnalyzerKeyword_1_0() { return cREMOVERemoveAnalyzerKeyword_1_0; }
	}
	public class AnalyzerOperationsElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.AnalyzerOperations");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLOADPAGEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLOADPAGELoadPageKeyword_0_0 = (Keyword)cLOADPAGEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEXECUTEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEXECUTEExecuteKeyword_1_0 = (Keyword)cEXECUTEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cREMOVEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cREMOVERemovePageKeyword_2_0 = (Keyword)cREMOVEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLOADMODELEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLOADMODELLoadModelKeyword_3_0 = (Keyword)cLOADMODELEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum AnalyzerOperations:
		//	LOADPAGE='LoadPage' |
		//	EXECUTE='Execute' |
		//	REMOVE='RemovePage' |
		//	LOADMODEL='LoadModel';
		public EnumRule getRule() { return rule; }
		
		//LOADPAGE='LoadPage' | EXECUTE='Execute' | REMOVE='RemovePage' | LOADMODEL='LoadModel'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LOADPAGE='LoadPage'
		public EnumLiteralDeclaration getLOADPAGEEnumLiteralDeclaration_0() { return cLOADPAGEEnumLiteralDeclaration_0; }
		
		//'LoadPage'
		public Keyword getLOADPAGELoadPageKeyword_0_0() { return cLOADPAGELoadPageKeyword_0_0; }
		
		//EXECUTE='Execute'
		public EnumLiteralDeclaration getEXECUTEEnumLiteralDeclaration_1() { return cEXECUTEEnumLiteralDeclaration_1; }
		
		//'Execute'
		public Keyword getEXECUTEExecuteKeyword_1_0() { return cEXECUTEExecuteKeyword_1_0; }
		
		//REMOVE='RemovePage'
		public EnumLiteralDeclaration getREMOVEEnumLiteralDeclaration_2() { return cREMOVEEnumLiteralDeclaration_2; }
		
		//'RemovePage'
		public Keyword getREMOVERemovePageKeyword_2_0() { return cREMOVERemovePageKeyword_2_0; }
		
		//LOADMODEL='LoadModel'
		public EnumLiteralDeclaration getLOADMODELEnumLiteralDeclaration_3() { return cLOADMODELEnumLiteralDeclaration_3; }
		
		//'LoadModel'
		public Keyword getLOADMODELLoadModelKeyword_3_0() { return cLOADMODELLoadModelKeyword_3_0; }
	}
	public class PageOperationsElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.PageOperations");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cURLEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cURLUrlKeyword_0_0 = (Keyword)cURLEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCONNECTIONTYPEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCONNECTIONTYPEConnectTypeKeyword_1_0 = (Keyword)cCONNECTIONTYPEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PageOperations:
		//	URL='url' |
		//	CONNECTIONTYPE='connectType';
		public EnumRule getRule() { return rule; }
		
		//URL='url' | CONNECTIONTYPE='connectType'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//URL='url'
		public EnumLiteralDeclaration getURLEnumLiteralDeclaration_0() { return cURLEnumLiteralDeclaration_0; }
		
		//'url'
		public Keyword getURLUrlKeyword_0_0() { return cURLUrlKeyword_0_0; }
		
		//CONNECTIONTYPE='connectType'
		public EnumLiteralDeclaration getCONNECTIONTYPEEnumLiteralDeclaration_1() { return cCONNECTIONTYPEEnumLiteralDeclaration_1; }
		
		//'connectType'
		public Keyword getCONNECTIONTYPEConnectTypeKeyword_1_0() { return cCONNECTIONTYPEConnectTypeKeyword_1_0; }
	}
	public class ConnectionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.SWEUIBK.ConnectionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPOSTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPOSTPostKeyword_0_0 = (Keyword)cPOSTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGETEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGETGetKeyword_1_0 = (Keyword)cGETEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ConnectionType:
		//	POST='post' |
		//	GET='get';
		public EnumRule getRule() { return rule; }
		
		//POST='post' | GET='get'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//POST='post'
		public EnumLiteralDeclaration getPOSTEnumLiteralDeclaration_0() { return cPOSTEnumLiteralDeclaration_0; }
		
		//'post'
		public Keyword getPOSTPostKeyword_0_0() { return cPOSTPostKeyword_0_0; }
		
		//GET='get'
		public EnumLiteralDeclaration getGETEnumLiteralDeclaration_1() { return cGETEnumLiteralDeclaration_1; }
		
		//'get'
		public Keyword getGETGetKeyword_1_0() { return cGETGetKeyword_1_0; }
	}
	
	private final DomainmodelElements pDomainmodel;
	private final ObjectDeclarationElements pObjectDeclaration;
	private final ModelDeclarationElements pModelDeclaration;
	private final MonitorDeclarationElements pMonitorDeclaration;
	private final MonitorInitializationElements pMonitorInitialization;
	private final AnalyzerDeclarationElements pAnalyzerDeclaration;
	private final AnalyzerElements pAnalyzer;
	private final PageDeclarationElements pPageDeclaration;
	private final ObjectActionElements pObjectAction;
	private final ModelActionElements pModelAction;
	private final ModelStructureElements pModelStructure;
	private final MonitorObjectActionElements pMonitorObjectAction;
	private final AnalyzerObjectActionElements pAnalyzerObjectAction;
	private final PageObjectActionElements pPageObjectAction;
	private final GenerateHeaderElements pGenerateHeader;
	private final HeaderElements pHeader;
	private final MethodParameterElements pMethodParameter;
	private final MonitorOperationsElements eMonitorOperations;
	private final AnalyzerOperationsElements eAnalyzerOperations;
	private final PageOperationsElements ePageOperations;
	private final ConnectionTypeElements eConnectionType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SWEUIBKGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomainmodel = new DomainmodelElements();
		this.pObjectDeclaration = new ObjectDeclarationElements();
		this.pModelDeclaration = new ModelDeclarationElements();
		this.pMonitorDeclaration = new MonitorDeclarationElements();
		this.pMonitorInitialization = new MonitorInitializationElements();
		this.pAnalyzerDeclaration = new AnalyzerDeclarationElements();
		this.pAnalyzer = new AnalyzerElements();
		this.pPageDeclaration = new PageDeclarationElements();
		this.pObjectAction = new ObjectActionElements();
		this.pModelAction = new ModelActionElements();
		this.pModelStructure = new ModelStructureElements();
		this.pMonitorObjectAction = new MonitorObjectActionElements();
		this.pAnalyzerObjectAction = new AnalyzerObjectActionElements();
		this.pPageObjectAction = new PageObjectActionElements();
		this.pGenerateHeader = new GenerateHeaderElements();
		this.pHeader = new HeaderElements();
		this.pMethodParameter = new MethodParameterElements();
		this.eMonitorOperations = new MonitorOperationsElements();
		this.eAnalyzerOperations = new AnalyzerOperationsElements();
		this.ePageOperations = new PageOperationsElements();
		this.eConnectionType = new ConnectionTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.SWEUIBK".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Domainmodel:
	//	elements+=ObjectDeclaration* actions+=ObjectAction*;
	public DomainmodelElements getDomainmodelAccess() {
		return pDomainmodel;
	}
	
	public ParserRule getDomainmodelRule() {
		return getDomainmodelAccess().getRule();
	}
	
	//ObjectDeclaration:
	//	MonitorDeclaration | AnalyzerDeclaration | PageDeclaration | ModelDeclaration;
	public ObjectDeclarationElements getObjectDeclarationAccess() {
		return pObjectDeclaration;
	}
	
	public ParserRule getObjectDeclarationRule() {
		return getObjectDeclarationAccess().getRule();
	}
	
	//ModelDeclaration:
	//	'Model' name=ID;
	public ModelDeclarationElements getModelDeclarationAccess() {
		return pModelDeclaration;
	}
	
	public ParserRule getModelDeclarationRule() {
		return getModelDeclarationAccess().getRule();
	}
	
	//MonitorDeclaration:
	//	'Monitor' name=ID MonitorInitialization;
	public MonitorDeclarationElements getMonitorDeclarationAccess() {
		return pMonitorDeclaration;
	}
	
	public ParserRule getMonitorDeclarationRule() {
		return getMonitorDeclarationAccess().getRule();
	}
	
	//MonitorInitialization:
	//	STRING;
	public MonitorInitializationElements getMonitorInitializationAccess() {
		return pMonitorInitialization;
	}
	
	public ParserRule getMonitorInitializationRule() {
		return getMonitorInitializationAccess().getRule();
	}
	
	//AnalyzerDeclaration:
	//	'Analyzer' Analyzer;
	public AnalyzerDeclarationElements getAnalyzerDeclarationAccess() {
		return pAnalyzerDeclaration;
	}
	
	public ParserRule getAnalyzerDeclarationRule() {
		return getAnalyzerDeclarationAccess().getRule();
	}
	
	//Analyzer:
	//	name=ID;
	public AnalyzerElements getAnalyzerAccess() {
		return pAnalyzer;
	}
	
	public ParserRule getAnalyzerRule() {
		return getAnalyzerAccess().getRule();
	}
	
	//PageDeclaration:
	//	'Page' name=ID;
	public PageDeclarationElements getPageDeclarationAccess() {
		return pPageDeclaration;
	}
	
	public ParserRule getPageDeclarationRule() {
		return getPageDeclarationAccess().getRule();
	}
	
	//ObjectAction:
	//	MonitorObjectAction | AnalyzerObjectAction | PageObjectAction | ModelAction;
	public ObjectActionElements getObjectActionAccess() {
		return pObjectAction;
	}
	
	public ParserRule getObjectActionRule() {
		return getObjectActionAccess().getRule();
	}
	
	//ModelAction:
	//	name=ID '.' 'loadStructure' '(' ModelStructure+ ')';
	public ModelActionElements getModelActionAccess() {
		return pModelAction;
	}
	
	public ParserRule getModelActionRule() {
		return getModelActionAccess().getRule();
	}
	
	//ModelStructure:
	//	STRING;
	public ModelStructureElements getModelStructureAccess() {
		return pModelStructure;
	}
	
	public ParserRule getModelStructureRule() {
		return getModelStructureAccess().getRule();
	}
	
	//MonitorObjectAction:
	//	name=ID '.' value=MonitorOperations '(' method=MethodParameter? ')';
	public MonitorObjectActionElements getMonitorObjectActionAccess() {
		return pMonitorObjectAction;
	}
	
	public ParserRule getMonitorObjectActionRule() {
		return getMonitorObjectActionAccess().getRule();
	}
	
	//AnalyzerObjectAction:
	//	name=ID '.' value=AnalyzerOperations '(' method=MethodParameter? ')';
	public AnalyzerObjectActionElements getAnalyzerObjectActionAccess() {
		return pAnalyzerObjectAction;
	}
	
	public ParserRule getAnalyzerObjectActionRule() {
		return getAnalyzerObjectActionAccess().getRule();
	}
	
	//PageObjectAction:
	//	name=ID '.' (value=PageOperations '(' method=MethodParameter? ')' | GenerateHeader);
	public PageObjectActionElements getPageObjectActionAccess() {
		return pPageObjectAction;
	}
	
	public ParserRule getPageObjectActionRule() {
		return getPageObjectActionAccess().getRule();
	}
	
	//GenerateHeader:
	//	'generateHeaderList' '(' Header* ')';
	public GenerateHeaderElements getGenerateHeaderAccess() {
		return pGenerateHeader;
	}
	
	public ParserRule getGenerateHeaderRule() {
		return getGenerateHeaderAccess().getRule();
	}
	
	//Header:
	//	STRING '(' STRING ')';
	public HeaderElements getHeaderAccess() {
		return pHeader;
	}
	
	public ParserRule getHeaderRule() {
		return getHeaderAccess().getRule();
	}
	
	//MethodParameter:
	//	STRING;
	public MethodParameterElements getMethodParameterAccess() {
		return pMethodParameter;
	}
	
	public ParserRule getMethodParameterRule() {
		return getMethodParameterAccess().getRule();
	}
	
	//enum MonitorOperations:
	//	ADD='AddAnalyzer' |
	//	REMOVE='RemoveAnalyzer';
	public MonitorOperationsElements getMonitorOperationsAccess() {
		return eMonitorOperations;
	}
	
	public EnumRule getMonitorOperationsRule() {
		return getMonitorOperationsAccess().getRule();
	}
	
	//enum AnalyzerOperations:
	//	LOADPAGE='LoadPage' |
	//	EXECUTE='Execute' |
	//	REMOVE='RemovePage' |
	//	LOADMODEL='LoadModel';
	public AnalyzerOperationsElements getAnalyzerOperationsAccess() {
		return eAnalyzerOperations;
	}
	
	public EnumRule getAnalyzerOperationsRule() {
		return getAnalyzerOperationsAccess().getRule();
	}
	
	//enum PageOperations:
	//	URL='url' |
	//	CONNECTIONTYPE='connectType';
	public PageOperationsElements getPageOperationsAccess() {
		return ePageOperations;
	}
	
	public EnumRule getPageOperationsRule() {
		return getPageOperationsAccess().getRule();
	}
	
	//enum ConnectionType:
	//	POST='post' |
	//	GET='get';
	public ConnectionTypeElements getConnectionTypeAccess() {
		return eConnectionType;
	}
	
	public EnumRule getConnectionTypeRule() {
		return getConnectionTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
