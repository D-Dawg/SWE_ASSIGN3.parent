/*
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.validation

import org.xtext.example.mydsl.sWEUIBK.SWEUIBKPackage
import org.eclipse.xtext.validation.Check
import org.xtext.example.mydsl.sWEUIBK.MonitorObjectAction
import org.xtext.example.mydsl.sWEUIBK.AnalyzerObjectAction
import org.xtext.example.mydsl.sWEUIBK.MonitorDeclaration
import org.xtext.example.mydsl.sWEUIBK.AnalyzerDeclaration
import org.xtext.example.mydsl.sWEUIBK.PageDeclaration
import org.xtext.example.mydsl.sWEUIBK.AnalyzerOperations
import org.xtext.example.mydsl.sWEUIBK.PageObjectAction
import org.xtext.example.mydsl.sWEUIBK.Domainmodel

/**
 * This class contains custom validation rules.
				*
				* See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
		*/
  class SWEUIBKValidator extends AbstractSWEUIBKValidator {

	  public static val INVALID_NAME = 'invalidName'



      @Check
      def checkempty2(AnalyzerObjectAction action){
          if(action.method.isNullOrEmpty){
              error('Parameter missing',action,SWEUIBKPackage.Literals.ANALYZER_OBJECT_ACTION__METHOD)
          }
      }

      @Check
      def checkmonitorempty(MonitorObjectAction action){
          if(action.method.isNullOrEmpty){
              error('Parameter missing in ',action,null,-1)
          }
      }



      @Check
      def checkempty3(AnalyzerObjectAction action){
          if(action.method.isNullOrEmpty){
              error('Parameter missing',action,SWEUIBKPackage.Literals.ANALYZER_OBJECT_ACTION__METHOD)
          }
      }

    @Check
    def checkempty(Domainmodel model){
        if(model.elements.isNullOrEmpty()){
            error('Model needs to contain object creation',model,null,-1)
        }
    }

      @Check
      def checkLowerCaseAction(AnalyzerObjectAction action){
          if(Character.isUpperCase(action.name.toString.charAt(0))){
              error('Only Lower case: '+action.name.toString,action,null,-1)
          }
      }

      @Check
      def checkLowerCaseAction2(PageObjectAction action){
          if(Character.isUpperCase(action.name.toString.charAt(0))){
              error('Only Lower case: '+action.name.toString,action,null,-1)
          }
      }


      @Check
      def checkLowerCaseMonitor(MonitorDeclaration action){
          if(Character.isUpperCase(action.name.toString.charAt(0))){
              error('Only Lower case: '+action.name.toString,action,null,-1)
          }
      }

//      @Check
//      def checkLowerCaseAnalyzer(AnalyzerDeclaration action){
//          if(Character.isUpperCase(action.name.toString.charAt(0))){
//              error('Only Lower case: '+action.name.toString,action,null,-1)
//          }
//      }

      @Check
      def checkLowerCasePage(PageDeclaration action){
          if(Character.isUpperCase(action.name.toString.charAt(0))){
              error('Only Lower case: '+action.name.toString,action,null,-1)
          }
      }
}
